const fs = require('fs');
const path = require('path');
const crypto = require('crypto');

const projectRoot = process.env.INIT_CWD;

if (!projectRoot || projectRoot === process.cwd()) {
  return;
}

const rootIdPath = path.join(projectRoot, '.projectId.json');
const internalIdPath = path.join(__dirname, '..', 'src', 'projectId.ts');

let projectId;
try {
  if (fs.existsSync(rootIdPath)) {
    projectId = JSON.parse(fs.readFileSync(rootIdPath, 'utf8'));
  } else {
    projectId = crypto.randomUUID();
    fs.writeFileSync(rootIdPath, JSON.stringify(projectId), 'utf8');
  }
} catch (error) {
  console.error('Failed to read or create project ID.', error);
  return;
}

const fileContent = `// DO NOT EDIT. This file is automatically generated by a post-install script.\nexport const PROJECT_ID = '${projectId}';`;

try {
  fs.writeFileSync(internalIdPath, fileContent, 'utf8');
} catch (error) {
  console.error('Failed to sync project ID into the framework.', error);
}